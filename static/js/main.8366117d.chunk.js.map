{"version":3,"sources":["logo.svg","Todo.js","NewTodo.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Todo","getTodosAndDisplay","e","APIKey","xhttp","XMLHttpRequest","onreadystatechange","this","readyState","status","console","log","todos","JSON","parse","responseText","length","newListItem","document","createElement","newCheckbox","newDelete","inverti","i","rawText","text","innerHTML","id","setAttribute","getElementById","append","completed","checked","classList","add","stringify","p","currentId","substring","addEventListener","event","bool","target","querySelector","data","xhttp2","todo","remove","open","setRequestHeader","send","delid","delxhttp","itemId","itemToRemove","parentNode","removeChild","state","currentTodo","key","bind","window","Component","NewTodo","addWithEnter","preventDefault","inputText","value","postxhttp","fullDataToBePosted","listLength","getElementsByTagName","addIndex","className","onSubmit","type","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8366117d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './Todo.css';\n\nclass Todo extends Component {\n  constructor() {\n  super()\n  this.state = {\n    todos: [],\n    currentTodo: {\n      text: '',\n      key: ''\n    },\n  }\n\n    this.getTodosAndDisplay = this.getTodosAndDisplay.bind(this);\n}\n\n\n\ncomponentDidMount() {\n    window.addEventListener('load', this.getTodosAndDisplay);\n\n  }\n\n\n\n\n\n  getTodosAndDisplay = (e) => {\n    var APIKey = \"c1d50e-f554c3-89956a-90f947-7ca7ea\";\n    var xhttp = new XMLHttpRequest();\n    xhttp.onreadystatechange = function()\n    {\n      if (this.readyState == 4 && this.status == 200) {\n        console.log(\"GET response text:\")\n        var todos = JSON.parse(this.responseText);\n        console.log(todos);\n        if (todos.length>0){\n           for(var i =todos.length-1; i>-1; i--){\n\n\n            var newListItem = document.createElement(\"li\");\n            var newCheckbox = document.createElement(\"input\");\n            var newDelete = document.createElement(\"button\");\n            var inverti = (i-todos.length)*(-1);\n\n            var rawText=todos[i].text;\n\n            newListItem.innerHTML = rawText;\n            newListItem.id= \"todoListItem\"+inverti;\n\n            newCheckbox.setAttribute(\"type\", \"checkbox\");\n            newCheckbox.id= \"CheckboxItem\"+inverti;\n\n            newDelete.innerHTML = \"Remove ToDo\";\n            newDelete.id = \"deleteItem\" + inverti;\n\n\n            document.getElementById(\"todoList\").append(newListItem);\n            document.getElementById(\"todoListItem\"+inverti).append(newCheckbox);\n            document.getElementById(\"todoListItem\"+inverti).append(newDelete);\n\n            if((todos[i].completed)==true){\n            newCheckbox.checked = true;\n            var element = document.getElementById(\"todoListItem\"+inverti);\n            element.classList.add(\"struckthrough\");\n\n            }\n            var styling = document.getElementById(\"todoListItem\"+inverti);\n            styling.classList.add(\"textstyling\");\n\n            let length = JSON.stringify(todos[i].id).length;\n            let p= inverti;\n            let currentId = JSON.stringify(todos[i].id).substring(1,length-1);\n            let currentBoolean=(todos[i].completed);\n            \n\n            document.getElementById(\"CheckboxItem\"+inverti).addEventListener('click', function(event){\n              var APIKey = \"c1d50e-f554c3-89956a-90f947-7ca7ea\";\n              var bool= event.target.checked;\n              // var string = event.target.id;\n              // var p = string.substring(string.length-1, string.length);\n               var id = currentId;\n              // console.log(p);\n              // console.log(id);\n\n              let myList = document.querySelector('ol');\n\n              if(bool==false){\n                var data = {\n                  completed: false\n                }\n                var xhttp2 = new XMLHttpRequest();\n                xhttp2.onreadystatechange = function() {\n                  if (this.readyState == 4 && this.status == 200) {\n                    var todo = JSON.parse(this.responseText);\n                    console.log(\"PUT false response text:\");\n                    console.log(todo);\n                    var element = document.getElementById(\"todoListItem\"+p);\n                    element.classList.remove(\"struckthrough\");\n                  }\n                  else if (this.readyState == 4) {\n                    console.log(this.responseText);\n                  }\n                };\n                xhttp2.open(\"PUT\", \"https://cse204.work/todos/\" + id, true);\n                xhttp2.setRequestHeader(\"Content-type\", \"application/json\");\n                xhttp2.setRequestHeader(\"x-api-key\", APIKey);\n                xhttp2.send(JSON.stringify(data));\n              }\n              else{\n                var data = {\n                  completed: true\n                }\n                var xhttp2 = new XMLHttpRequest();\n                xhttp2.onreadystatechange = function() {\n                  if (this.readyState == 4 && this.status == 200) {\n                    var todo = JSON.parse(this.responseText);\n                    console.log(\"PUT true response text:\");\n                    console.log(todo);\n                    var element = document.getElementById(\"todoListItem\"+p);\n                    element.classList.add(\"struckthrough\");\n                  }\n                  else if (this.readyState == 4) {\n                    console.log(this.responseText);\n                  }\n                };\n                xhttp2.open(\"PUT\", \"https://cse204.work/todos/\" + id, true);\n                xhttp2.setRequestHeader(\"Content-type\", \"application/json\");\n                xhttp2.setRequestHeader(\"x-api-key\", APIKey);\n                xhttp2.send(JSON.stringify(data));\n              }\n            });\n\n            document.getElementById(\"deleteItem\"+inverti).addEventListener('click', function(event){\n              var delid = currentId;\n              var delxhttp = new XMLHttpRequest();\n              delxhttp.onreadystatechange = function()\n              {\n                if (this.readyState == 4 && this.status == 200) {\n                  console.log(\"DELETE response text:\")\n                  var todo = JSON.parse(this.responseText);\n\n                  console.log(todo);\n                }\n                else if (this.readyState ==4){\n                  console.log(this.responseText);\n                }\n              };\n              delxhttp.open(\"DELETE\", \"https://cse204.work/todos/\" + delid, true);\n              delxhttp.setRequestHeader(\"x-api-key\",APIKey);\n              delxhttp.send();\n\n              var itemId = \"todoListItem\" + p;\n              var itemToRemove = document.getElementById(itemId);\n              itemToRemove.parentNode.removeChild(itemToRemove);\n\n\n\n\n            });\n\n\n\n\n          }\n\n        }\n      }\n      else if (this.readyState == 4){\n        console.log(this.responseText);\n      }\n\n\n    };\n\n    xhttp.open(\"GET\", \"https://cse204.work/todos\", true);\n    xhttp.setRequestHeader(\"x-api-key\",APIKey);\n    xhttp.send();\n  }\n\n\nrender(){\n  return (\n\n\n    <ol id=\"todoList\">\n\n      </ol>\n\n  );\n}\n}\n\nexport default Todo;\n\n\n// <li id=\"todoListItem1\" class=\"struckthrough textstyling\">\n//  Write Server Side Code\n//\n//  <input type=\"checkbox\" id=\"CheckboxItem1\"/>\n//\n//  <button id=\"deleteItem1\">Remove ToDo</button>\n//  </li>\n","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './NewTodo.css';\n\nclass NewTodo extends Component {\n\naddWithEnter = (e) => {\n  e.preventDefault();\n  console.log('yum');\n\n  var APIKey = \"c1d50e-f554c3-89956a-90f947-7ca7ea\";\nvar inputText = document.getElementById(\"newAdd\").value;\n\n  var postxhttp = new XMLHttpRequest();\n  var fullDataToBePosted={\n    text: inputText\n  }\n  postxhttp.onreadystatechange = function() {\n\n    if (this.readyState == 4 && this.status == 200) {\n      var todo = JSON.parse(this.responseText);\n      console.log(\"POST response text:\");\n      console.log(todo);\n      var id = todo.id;\n      // makeClientPost(inputText,id);\n      var ol = document.getElementById('todoList');\nvar lists = ol.getElementsByTagName('li');\nvar listLength = lists.length; // total items\n\n\n  var newListItem = document.createElement(\"li\");\n  var newCheckbox = document.createElement(\"input\");\n  var newDelete = document.createElement(\"button\");\n  var addIndex = listLength+1;\n\n  newListItem.innerHTML = inputText;\n  newListItem.id= \"todoListItem\"+addIndex;\n\n  newCheckbox.setAttribute(\"type\", \"checkbox\");\n  newCheckbox.id= \"CheckboxItem\"+addIndex;\n\n  newDelete.innerHTML = \"Remove ToDo\";\n  newDelete.id = \"deleteItem\" + addIndex;\n\n\n  document.getElementById(\"todoList\").append(newListItem);\n  document.getElementById(\"todoListItem\"+addIndex).append(newCheckbox);\n  document.getElementById(\"todoListItem\"+addIndex).append(newDelete);\n\n  var styling = document.getElementById(\"todoListItem\"+addIndex);\n  styling.classList.add(\"textstyling\");\n\n  let p = addIndex;\n  // document.getElementById(\"CheckboxItem\"+addIndex).addEventListener(\"click\", function(){ decideTF(p,id); });\n  document.getElementById(\"CheckboxItem\"+addIndex).addEventListener('click', function(event){\n    var APIKey = \"c1d50e-f554c3-89956a-90f947-7ca7ea\";\n    var bool= event.target.checked;\n    // var string = event.target.id;\n    // var p = string.substring(string.length-1, string.length);\n\n    // console.log(p);\n    // console.log(id);\n\n    let myList = document.querySelector('ol');\n\n    if(bool==false){\n      var data = {\n        completed: false\n      }\n      var xhttp2 = new XMLHttpRequest();\n      xhttp2.onreadystatechange = function() {\n        if (this.readyState == 4 && this.status == 200) {\n          var todo = JSON.parse(this.responseText);\n          console.log(\"PUT false response text:\");\n          console.log(todo);\n          var element = document.getElementById(\"todoListItem\"+p);\n          element.classList.remove(\"struckthrough\");\n        }\n        else if (this.readyState == 4) {\n          console.log(this.responseText);\n        }\n      };\n      xhttp2.open(\"PUT\", \"https://cse204.work/todos/\" + id, true);\n      xhttp2.setRequestHeader(\"Content-type\", \"application/json\");\n      xhttp2.setRequestHeader(\"x-api-key\", APIKey);\n      xhttp2.send(JSON.stringify(data));\n    }\n    else{\n      var data = {\n        completed: true\n      }\n      var xhttp2 = new XMLHttpRequest();\n      xhttp2.onreadystatechange = function() {\n        if (this.readyState == 4 && this.status == 200) {\n          var todo = JSON.parse(this.responseText);\n          console.log(\"PUT true response text:\");\n          console.log(todo);\n          var element = document.getElementById(\"todoListItem\"+p);\n          element.classList.add(\"struckthrough\");\n        }\n        else if (this.readyState == 4) {\n          console.log(this.responseText);\n        }\n      };\n      xhttp2.open(\"PUT\", \"https://cse204.work/todos/\" + id, true);\n      xhttp2.setRequestHeader(\"Content-type\", \"application/json\");\n      xhttp2.setRequestHeader(\"x-api-key\", APIKey);\n      xhttp2.send(JSON.stringify(data));\n    }\n  });\n  // document.getElementById(\"deleteItem\"+addIndex).addEventListener(\"click\", function(){ deletePost(p,id); });\n  document.getElementById(\"deleteItem\"+addIndex).addEventListener('click', function(event){\n    var delid = id;\n    var delxhttp = new XMLHttpRequest();\n    delxhttp.onreadystatechange = function()\n    {\n      if (this.readyState == 4 && this.status == 200) {\n        console.log(\"DELETE response text:\")\n        var todo = JSON.parse(this.responseText);\n\n        console.log(todo);\n      }\n      else if (this.readyState ==4){\n        console.log(this.responseText);\n      }\n    };\n    delxhttp.open(\"DELETE\", \"https://cse204.work/todos/\" + delid, true);\n    delxhttp.setRequestHeader(\"x-api-key\",APIKey);\n    delxhttp.send();\n\n    var itemId = \"todoListItem\" + addIndex;\n    var itemToRemove = document.getElementById(itemId);\n    itemToRemove.parentNode.removeChild(itemToRemove);\n\n\n\n\n  });\n  document.getElementById(\"newAdd\").value=\"\";\n\n\n    }\n    else if (this.readyState == 4) {\n      console.log(this.responseText);\n    }\n  }\n  postxhttp.open(\"POST\", \"https://cse204.work/todos\", true);\n  postxhttp.setRequestHeader(\"Content-type\", \"application/json\");\n  postxhttp.setRequestHeader(\"x-api-key\", APIKey);\n  postxhttp.send(JSON.stringify(fullDataToBePosted));\n}\n\ncomponentDidMount() {\n  document.getElementById(\"myBtn\").addEventListener('click',function(){\n      var APIKey = \"c1d50e-f554c3-89956a-90f947-7ca7ea\";\n    var inputText = document.getElementById(\"newAdd\").value;\n\n      var postxhttp = new XMLHttpRequest();\n      var fullDataToBePosted={\n        text: inputText\n      }\n      postxhttp.onreadystatechange = function() {\n\n        if (this.readyState == 4 && this.status == 200) {\n          var todo = JSON.parse(this.responseText);\n          console.log(\"POST response text:\");\n          console.log(todo);\n          var id = todo.id;\n          // makeClientPost(inputText,id);\n          var ol = document.getElementById('todoList');\n    var lists = ol.getElementsByTagName('li');\n    var listLength = lists.length; // total items\n\n\n      var newListItem = document.createElement(\"li\");\n      var newCheckbox = document.createElement(\"input\");\n      var newDelete = document.createElement(\"button\");\n      var addIndex = listLength+1;\n\n      newListItem.innerHTML = inputText;\n      newListItem.id= \"todoListItem\"+addIndex;\n\n      newCheckbox.setAttribute(\"type\", \"checkbox\");\n      newCheckbox.id= \"CheckboxItem\"+addIndex;\n\n      newDelete.innerHTML = \"Remove ToDo\";\n      newDelete.id = \"deleteItem\" + addIndex;\n\n\n      document.getElementById(\"todoList\").append(newListItem);\n      document.getElementById(\"todoListItem\"+addIndex).append(newCheckbox);\n      document.getElementById(\"todoListItem\"+addIndex).append(newDelete);\n\n      var styling = document.getElementById(\"todoListItem\"+addIndex);\n      styling.classList.add(\"textstyling\");\n\n      let p = addIndex;\n      // document.getElementById(\"CheckboxItem\"+addIndex).addEventListener(\"click\", function(){ decideTF(p,id); });\n      document.getElementById(\"CheckboxItem\"+addIndex).addEventListener('click', function(event){\n        var APIKey = \"c1d50e-f554c3-89956a-90f947-7ca7ea\";\n        var bool= event.target.checked;\n        // var string = event.target.id;\n        // var p = string.substring(string.length-1, string.length);\n\n        // console.log(p);\n        // console.log(id);\n\n        let myList = document.querySelector('ol');\n\n        if(bool==false){\n          var data = {\n            completed: false\n          }\n          var xhttp2 = new XMLHttpRequest();\n          xhttp2.onreadystatechange = function() {\n            if (this.readyState == 4 && this.status == 200) {\n              var todo = JSON.parse(this.responseText);\n              console.log(\"PUT false response text:\");\n              console.log(todo);\n              var element = document.getElementById(\"todoListItem\"+p);\n              element.classList.remove(\"struckthrough\");\n            }\n            else if (this.readyState == 4) {\n              console.log(this.responseText);\n            }\n          };\n          xhttp2.open(\"PUT\", \"https://cse204.work/todos/\" + id, true);\n          xhttp2.setRequestHeader(\"Content-type\", \"application/json\");\n          xhttp2.setRequestHeader(\"x-api-key\", APIKey);\n          xhttp2.send(JSON.stringify(data));\n        }\n        else{\n          var data = {\n            completed: true\n          }\n          var xhttp2 = new XMLHttpRequest();\n          xhttp2.onreadystatechange = function() {\n            if (this.readyState == 4 && this.status == 200) {\n              var todo = JSON.parse(this.responseText);\n              console.log(\"PUT true response text:\");\n              console.log(todo);\n              var element = document.getElementById(\"todoListItem\"+p);\n              element.classList.add(\"struckthrough\");\n            }\n            else if (this.readyState == 4) {\n              console.log(this.responseText);\n            }\n          };\n          xhttp2.open(\"PUT\", \"https://cse204.work/todos/\" + id, true);\n          xhttp2.setRequestHeader(\"Content-type\", \"application/json\");\n          xhttp2.setRequestHeader(\"x-api-key\", APIKey);\n          xhttp2.send(JSON.stringify(data));\n        }\n      });\n      // document.getElementById(\"deleteItem\"+addIndex).addEventListener(\"click\", function(){ deletePost(p,id); });\n      document.getElementById(\"deleteItem\"+addIndex).addEventListener('click', function(event){\n        var delid = id;\n        var delxhttp = new XMLHttpRequest();\n        delxhttp.onreadystatechange = function()\n        {\n          if (this.readyState == 4 && this.status == 200) {\n            console.log(\"DELETE response text:\")\n            var todo = JSON.parse(this.responseText);\n\n            console.log(todo);\n          }\n          else if (this.readyState ==4){\n            console.log(this.responseText);\n          }\n        };\n        delxhttp.open(\"DELETE\", \"https://cse204.work/todos/\" + delid, true);\n        delxhttp.setRequestHeader(\"x-api-key\",APIKey);\n        delxhttp.send();\n\n        var itemId = \"todoListItem\" + addIndex;\n        var itemToRemove = document.getElementById(itemId);\n        itemToRemove.parentNode.removeChild(itemToRemove);\n\n\n\n\n      });\n      document.getElementById(\"newAdd\").value=\"\";\n\n\n        }\n        else if (this.readyState == 4) {\n          console.log(this.responseText);\n        }\n      }\n      postxhttp.open(\"POST\", \"https://cse204.work/todos\", true);\n      postxhttp.setRequestHeader(\"Content-type\", \"application/json\");\n      postxhttp.setRequestHeader(\"x-api-key\", APIKey);\n      postxhttp.send(JSON.stringify(fullDataToBePosted));\n  });\n\n  }\n\nrender(){\n  return (\n    \n        <div className=\"row\">\n        <div className=\"col-sm-4\" id=\"empty\">\n        </div>\n        <div className=\"col-sm-4\" id=\"notempty\">\n          <form onSubmit = {this.addWithEnter}>\n          <input type=\"text\" id=\"newAdd\"/>\n          <button type=\"button\" id= \"myBtn\">Add ToDo</button>\n          </form>\n        </div>\n      </div>\n\n\n  );\n}\n}\n\nexport default NewTodo;\n","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Todo from './Todo';\nimport NewTodo from './NewTodo';\n\nclass App extends Component {\n\n\nrender() {\n  return (\n    <div className = \"body\">\n\n    <div className=\"text-center\">\n    <h1>\n      Nick's Todo List\n    </h1>\n    </div>\n\n    <div id = \"listContainer\">\n    <div className=\"row\">\n\n\n    <div className=\"col-sm-4\" id=\"empty\">\n    </div>\n\n\n\n    <div className=\"col-sm-4\" id=\"full\">\n\n    <section id=\"todos\">\n       <Todo />\n    </section>\n\n    </div>\n    </div>\n\n\n\n    <div className=\"row\">\n    <div className=\"col-sm-4\" id=\"empty\">\n    </div>\n\n    <div className=\"col-sm-4\" id=\"notempty\">\n    <NewTodo />\n    </div>\n\n    </div>\n    </div>\n    </div>\n\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}